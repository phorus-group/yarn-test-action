name: Yarn Test Action
description: An action to test

inputs:
  command:
    description: "The yarn command to run"
    required: false
    default: test
  coverage-summary-location:
    description: "Location of the coverage summary"
    required: false
    default: "./test/.coverage/coverage-summary.json"
  junit-report-location:
    description: "Location of the junit.xml report"
    required: false
    default: "./test/.coverage/junit.xml"
outputs:
  total-lines:
    description: "Total lines to cover with tests, only set if BUILD_AND_TEST is set to true"
    value: ${{ steps.report-coverage.outputs.total-lines }}
  lines-covered:
    description: "Total lines to covered with tests, only set if BUILD_AND_TEST is set to true"
    value: ${{ steps.report-coverage.outputs.lines-covered }}
  coverage-percentage:
    description: "The coverage percentage, only set if BUILD_AND_TEST is set to true"
    value: ${{ steps.report-coverage.outputs.coverage-percentage }}

runs:
  using: composite
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'

    - name: "Run yarn install"
      shell: bash
      run: yarn install --immutable

    - name: "Run tests"
      id: test
      run: |
        rm -rf ${{ inputs.coverage-summary-location }}

        yarn ${{ inputs.command }}
      shell: bash

    - name: "Report coverage"
      id: report-coverage
      if: ${{ !cancelled() }}
      shell: bash
      run: |
        if [ -f ${{ inputs.coverage-summary-location }} ]; then
          TOTAL_LINES=$(echo "$(jq '.total | .lines | .total ' ${{ inputs.coverage-summary-location }})")
          LINES_COVERED=$(echo "$(jq '.total | .lines | .covered ' ${{ inputs.coverage-summary-location }})")
          COVERAGE_PERCENTAGE=$(echo "$(jq '.total | .lines | .pct | .*100.0 + 0.5|floor/100.0' ${{ inputs.coverage-summary-location }})")

          echo "$LINES_COVERED / $TOTAL_LINES  instructions covered"
          echo "$COVERAGE_PERCENTAGE % covered"

          echo "total-lines=$TOTAL_LINES" >> "$GITHUB_OUTPUT"
          echo "lines-covered=$LINES_COVERED" >> "$GITHUB_OUTPUT"
          echo "coverage-percentage=$COVERAGE_PERCENTAGE" >> "$GITHUB_OUTPUT"
        else
          echo -e "\e[33mCoverage summary not found!\e[0m"
        fi

    - name: "Process junit report"
      id: process-junit-report
      if: ${{ !cancelled() }}
      shell: bash
      run: |
        if [ -f ${{ inputs.junit-report-location }} ]; then
          echo "junit-report=true" >> "$GITHUB_OUTPUT"
        else
          echo -e "\e[33mJunit report not found!\e[0m"
          echo "junit-report=false" >> "$GITHUB_OUTPUT"
        fi
    
    - name: "Report test summary"
      if: ${{ !cancelled() && steps.process-junit-report.outputs.junit-report == 'true' }}
      uses: test-summary/action@v2
      with:
        paths: ${{ inputs.junit-report-location }}
